1. Вивести значення наступних колонок: назва книги, ціна, назва видавництва. Використовувати внутрішнє з'єднання, застосовуючи where : 
	SELECT table_1.Назва, table_1.Цiна, Видавцi.Видавництво FROM table_1, Видавцi WHERE table_1.Видавництво_ID=Видавцi.Видавництво_ID 
	
2. Вивести значення наступних колонок: назва книги, назва категорії. Використовувати внутрішнє з'єднання, застосовуючи inner join : 
	SELECT table_1.Назва, Категорiї.Категорiя FROM table_1 INNER JOIN Категорiї ON table_1.Категорiя_ID=Категорiї.Категорiя_ID 

3. Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат : 
	SELECT table_1.Назва, table_1.Цiна, Видавцi.Видавництво, Формати.Формат FROM table_1 INNER JOIN Видавцi INNER JOIN Формати ON table_1.Видавництво_ID=Видавцi.Видавництво_ID AND table_1.Формат_ID=Формати.Формат_ID 
	
4. Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям : 
	SELECT Теми.Тема, Категорiї.Категорiя, table_1.Назва, Видавцi.Видавництво FROM table_1 INNER JOIN Теми INNER JOIN Категорiї INNER JOIN Видавцi ON table_1.Тема_ID=Теми.Тема_ID AND table_1.Категорiя_ID=Категорiї.Категорiя_ID AND table_1.Видавництво_ID=Видавцi.Видавництво_ID
	// сортировка?
	
5. Вивести книги видавництва 'BHV', видані після 2000 р : 
	SELECT table_1.Назва, Видавцi.Видавництво, YEAR(table_1.Дата) AS Рiк FROM table_1 INNER JOIN Видавцi ON table_1.Видавництво_ID=Видавцi.Видавництво_ID WHERE Видавцi.Видавництво LIKE 'BHV%' AND YEAR(table_1.Дата)>2000 

6. Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій кількості сторінок : 
	SELECT SUM(table_1.Сторiнки) AS `Кiлькiсть сторiнок`, Категорiї.Категорiя FROM table_1 INNER JOIN Категорiї ON table_1.Категорiя_ID=Категорiї.Категорiя_ID GROUP BY Категорiї.Категорiя ORDER BY SUM(table_1.Сторiнки) DESC
	
7. Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux' : 
	SELECT AVG(table_1.Цiна) AS `Середня вартість`, Теми.Тема, Категорiї.Категорiя FROM table_1 INNER JOIN Теми INNER JOIN Категорiї ON table_1.Тема_ID = Теми.Тема_ID AND table_1.Категорiя_ID = Категорiї.Категорiя_ID WHERE Теми.Тема LIKE '%Використання ПК%' AND Категорiї.Категорiя = 'Linux' GROUP BY Теми.Тема, Категорiї.Категорiя
	// пустой рез
	
8. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи where : 
	SELECT table_1.N, table_1.Код, table_1.Новинка, table_1.Назва, table_1.Цiна, table_1.Сторiнки, Формати.Формат, table_1.Дата, table_1.Тираж, Теми.Тема, Категорiї.Категорiя, Видавцi.Видавництво FROM table_1, Формати, Теми, Категорiї, Видавцi WHERE table_1.Формат_ID=Формати.Формат_ID AND table_1.Тема_ID=Теми.Тема_ID AND table_1.Категорiя_ID=Категорiї.Категорiя_ID AND table_1.Видавництво_ID=Видавцi.Видавництво_ID
	
9. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи inner join : 
	SELECT table_1.N, table_1.Код, table_1.Новинка, table_1.Назва, table_1.Цiна, table_1.Сторiнки, Формати.Формат, table_1.Дата, table_1.Тираж, Теми.Тема, Категорiї.Категорiя, Видавцi.Видавництво FROM table_1 INNER JOIN Формати INNER JOIN Теми INNER JOIN Категорiї INNER JOIN Видавцi ON table_1.Формат_ID=Формати.Формат_ID AND table_1.Тема_ID=Теми.Тема_ID AND table_1.Категорiя_ID=Категорiї.Категорiя_ID AND table_1.Видавництво_ID=Видавцi.Видавництво_ID
	
10. Вивести всі дані універсального відношення. Використовувати зовнішнє з'єднання, застосовуючи left join / rigth join : 
	SELECT table_1.Код, table_1.Новинка, table_1.Назва, table_1.Цiна, table_1.Сторiнки, Формати.Формат, table_1.Дата, table_1.Тираж, Теми.Тема, Категорiї.Категорiя, Видавцi.Видавництво FROM table_1 LEFT JOIN Формати ON table_1.Формат_ID=Формати.Формат_ID LEFT JOIN Теми ON table_1.Тема_ID=Теми.Тема_ID LEFT JOIN Категорiї ON table_1.Категорiя_ID=Категорiї.Категорiя_ID LEFT JOIN Видавцi ON table_1.Видавництво_ID=Видавцi.Видавництво_ID
	SELECT table_1.Код, table_1.Новинка, table_1.Назва, table_1.Цiна, table_1.Сторiнки, Формати.Формат, table_1.Дата, table_1.Тираж, Теми.Тема, Категорiї.Категорiя, Видавцi.Видавництво FROM table_1 RIGHT JOIN Формати ON table_1.Формат_ID=Формати.Формат_ID RIGHT JOIN Теми ON table_1.Тема_ID=Теми.Тема_ID RIGHT JOIN Категорiї ON table_1.Категорiя_ID=Категорiї.Категорiя_ID RIGHT JOIN Видавцi ON table_1.Видавництво_ID=Видавцi.Видавництво_ID
		
11. Вивести пари книг, що мають однакову кількість сторінок. Використовувати само об’єднання і аліаси (self join) : 
	SELECT DISTINCT tb1.Назва 'Назва_1', tb2.Назва 'Назва_2' FROM table_1 tb1 JOIN table_1 tb2 ON tb1.Сторiнки = tb2.Сторiнки AND tb1.N != tb2.N
	
12.	Вивести тріади книг, що мають однакову ціну. Використовувати самооб'єднання і аліаси (self join) : 

	INSERT INTO `table_1` (`N`, `Код`, `Новинка`, `Назва`, `Цiна`, `Видавництво_ID`, `Сторiнки`, `Формат_ID`, `Дата`, `Тираж`, `Тема_ID`, `Категорiя_ID`) VALUES
		(230, 1495, 'Yes', 'Порожня_книга_1', 5.30, 11, NULL, 1, '2021-04-09', NULL, 1, 1),
		(231, 1496, 'Yes', 'Порожня_книга_2', 5.30, 11, NULL, 1, '2021-04-10', NULL, 1, 1),
		(232, 1497, 'Yes', 'Порожня_книга_3', 5.30, 11, NULL, 1, '2021-04-11', NULL, 1, 1),
		(233, 1498, 'Yes', 'Порожня_книга_4', 5.30, 11, NULL, 1, '2021-04-12', NULL, 1, 1),
		(234, 1499, 'Yes', 'Порожня_книга_5', 5.30, 11, NULL, 1, '2021-04-13', NULL, 1, 1);
	
	SELECT DISTINCT tab1.Назва 'Назва_1', tab2.Назва 'Назва_2', tab3.Назва 'Назва_3' FROM table_1 tab1 JOIN table_1 tab2 ON tab1.Цiна = tab2.Цiна AND tab1.N != tab2.N JOIN table_1 tab3 ON tab1.Цiна = tab3.Цiна AND tab1.N != tab3.N;
	
	DELETE FROM table_1 WHERE N BETWEEN 230 AND 234;
	
13.	Вивести всі книги категорії 'C ++'. Використовувати підзапити (subquery) : 
	SELECT * FROM table_1 WHERE Категорiя_ID = (SELECT Категорiя_ID FROM Категорiї WHERE Категорiї.Категорiя LIKE '%C++%')
	
14.	Вивести книги видавництва 'BHV', видані після 2000 р Використовувати підзапити (subquery) : 
	SELECT * FROM table_1 WHERE Видавництво_ID = (SELECT Видавництво_ID from Видавцi WHERE Видавцi.Видавництво LIKE '%BHV%') AND YEAR(Дата) > 2000
	
15.	Вивести список видавництв, у яких розмір книг перевищує 400 сторінок. Використовувати пов'язані підзапити (correlated subquery) : 
	SELECT * FROM Видавцi WHERE (SELECT MIN(Сторiнки) FROM table_1 WHERE table_1.Видавництво_ID = Видавцi.Видавництво_ID) > 400;
	
16.	Вивести список категорій в яких більше 3-х книг. Використовувати пов'язані підзапити (correlated subquery) : 
	SELECT * FROM Категорiї WHERE (SELECT COUNT(*) FROM table_1 WHERE table_1.Категорiя_ID = Категорiї.Категорiя_ID) > 3
	
17.	Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва. Використовувати exists : 
	SELECT * FROM table_1 WHERE EXISTS (SELECT * FROM Видавцi WHERE Видавцi.Видавництво LIKE '%BHV%' AND Видавцi.Видавництво_ID = table_1.Видавництво_ID)
	
18.	Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва. Використовувати not exists : 
	//противоречит сам себе?; пустой

	SELECT * FROM table_1 WHERE NOT EXISTS (SELECT * FROM Видавцi WHERE Видавцi.Видавництво LIKE '%BHV%' AND Видавцi.Видавництво_ID = table_1.Видавництво_ID) AND table_1.Видавництво_ID = (SELECT Видавцi.Видавництво_ID FROM Видавцi WHERE Видавцi.Видавництво LIKE '%BHV%')
	
19. Вивести відсортований загальний список назв тем і категорій. Використовувати union : 
	((SELECT * FROM Теми) UNION (SELECT * FROM Категорiї)) ORDER BY Тема, Категорiя
	
20. Вивести відсортований в зворотному порядку загальний список перших слів, назв книг і категорій що не повторюються. Використовувати union : 
	//первое уникальное слово;
	
	SELECT DISTINCT name FROM ((SELECT REGEXP_SUBSTR(TRIM(Назва), '^[^\\s]+') AS name FROM table_1) UNION ALL(SELECT REGEXP_SUBSTR(TRIM(Категорiя), '^[^\\s]+') as name FROM Категорiї)) names ORDER BY name DESC;
	